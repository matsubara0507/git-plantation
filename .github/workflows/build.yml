name: Build

on:
  pull_request: null
  push:
    branches:
    - master
    tags:
    - v*

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ghc: ["9.4.4"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Cache .stack
      id: cache-stack
      uses: actions/cache@v3
      with:
        path: ~/.stack
        key: "\
          ${{ runner.os }}-stack\
          -${{ hashFiles('**/stack.yaml.lock') }}\
          -${{ hashFiles('**/package.yaml') }}\
        "
        restore-keys: |
          ${{ runner.os }}-stack-
    - uses: haskell/actions/setup@v2
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        enable-stack: true
        stack-version: 'latest'

    - name: Install dependencies
      run: stack --system-ghc test --only-dependencies

    - name: Build and Test
      run: stack --system-ghc test --local-bin-path=./bin

    # Build and Push Docker Image
    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=ghcr.io/matsubara0507/git-plantation
        TAGS="${DOCKER_IMAGE}:latest"
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:${GITHUB_REF#refs/tags/}"
        fi
        echo ::set-output name=tags::${TAGS}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: matsubara0507
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        tags: ${{ steps.prep.outputs.tags }}
        push: ${{ github.event_name != 'pull_request' }}
        build-args: local_bin_path=./bin
